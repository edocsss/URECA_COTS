package v1;

import java.util.ArrayList;

public final class OperationGroupManager 
{
	/**
	 * Stores all Operation Group objects to ease getting an OperationGroup object when the diagram is generated
	 * This ArrayList will not be changed at all after the OperationGroup objects are generated by the Parser object
	 * and stored inside this static variable
	 */
	private static ArrayList<OperationGroup> operationGroups = new ArrayList<OperationGroup> ();
	
	/**
	 * Return an OperationGroup object specified by the ID
	 * @param id	The ID of the OperationGroup to be returned
	 * @return		OperationGroup object with the correct ID
	 */
	public static OperationGroup getOperationGroupById (int id)
	{
		for (OperationGroup og: operationGroups)
		{
			if (og.getId() == id)
			{
				return og;
			}
		}
		
		return null;
	}
	
	/**
	 * Set this class static OperationGroups ArrayList
	 * @param og 	The OperationGroup ArrayList to store in this operationGroups variable
	 */
	public static void setOperationGroups (ArrayList<OperationGroup> og)
	{
		operationGroups = og;
	}
	
	/**
	 * Get the biggest size OperationGroup (the outermost OperationGroup of the parsed expression)
	 * The biggest group must be added last so this method return the last element
	 * 
	 * @return	An OperationGroup object which is the biggest one
	 */
	public static OperationGroup getBiggestOperationGroup ()
	{
		return operationGroups.get(operationGroups.size() - 1);
	}
}